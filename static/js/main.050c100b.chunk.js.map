{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handlerKeyboardEvent","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAuB,CACrBC,IAAK,MAFT,EAaEC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,wBAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,wBAV/C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC+BM,KAAKP,MAAMC,IAD1C,KAEG,kCAvBd,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.050c100b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Key = {\n  key: string | null;\n};\n\nexport class App extends Component {\n  state: Readonly<Key> = {\n    key: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerKeyboardEvent);\n  }\n\n  handlerKeyboardEvent = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}